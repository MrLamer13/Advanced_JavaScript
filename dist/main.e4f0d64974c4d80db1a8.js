(()=>{"use strict";Vue.component("products",{data:()=>({catalogUrl:"/catalogData.json",filtered:[],products:[]}),mounted(){this.$parent.getJson("/api/products").then((t=>{for(let e of t)this.$data.products.push(e),this.$data.filtered.push(e)}))},methods:{filter(t){let e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.product_name)))}},template:'<div class="item_box__content">\n                <product v-for="item of filtered" \n                :key="item.id_product"\n                :product="item"                \n                @add-product="$parent.$refs.cart.addProduct"></product>\n               </div>'});Vue.component("product",{props:["product"],template:'\n            <div class="item">\n                <a class="item_link" href="#">\n                    <img class="item_img" :src=product.img alt="photo">\n                    <p class="item_text">{{ product.product_name }}</p>\n                    <p class="item_text_price">$<span class="item_text_price_value">{{ product.price.toFixed(2) }}</span></p>\n                </a>\n                <div class="item_add_box item_add_box_flex">\n                    <div class="item_add_box_"><button class="item_add" @click="$emit(\'add-product\', product)">\n                            <i class="fa fa-light fa-cart-shopping item_add_box__fa-cart-shopping"></i>\n                            <p class="item_add_text">Add to Cart</p>\n                        </button>\n                    </div>\n\n                    <div class="item_add_box_mini_flex">\n                        <div class="item_add_box_mini"><a href="#" class="item_add item_add_mini">\n                                <i class="fa-solid fa-repeat"></i>\n                            </a></div>\n                        <div class="item_add_box_mini"><a href="#" class="item_add item_add_mini">\n                                <i class="fa fa-thin fa-heart"></i>\n                            </a></div>\n                    </div>\n\n                </div>\n            </div>\n    '});Vue.component("cart",{data:()=>({cartUrl:"/getBasket.json",cartItems:[],showCart:!1,amount:0,countGoods:0}),mounted(){this.$parent.getJson("/api/cart").then((t=>{for(let e of t.contents)this.$data.cartItems.push(e);this.amount=t.amount,this.countGoods=t.countGoods}))},methods:{addProduct(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));if(e)this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:1}).then((t=>{1===t.result&&(e.quantity++,this.amount+=e.price)}));else{const e=Object.assign({quantity:1},t);this.$parent.postJson("/api/cart",e).then((t=>{1===t.result&&(this.cartItems.push(e),this.amount+=e.price)}))}this.countGoods++},remove(t){this.$parent.delJson(`/api/cart/${t.id_product}`).then((e=>{1===e.result&&(t.quantity>1?(t.quantity--,this.amount-=t.price):(this.cartItems.splice(this.cartItems.indexOf(t),1),this.amount-=t.price),this.countGoods--)}))}},template:'\n        <div class="basket">\n            <button class="basket_button" type="button" @click="showCart = !showCart">\n                <i class="fa fa-light fa-cart-shopping basket__fa-cart-shopping" :class="{pink: showCart}"></i><span\n                        class="basket_button_span" v-if="countGoods">{{ countGoods }}</span>\n                </button>\n\n                <div class="basket_box" v-show="showCart">\n                    <cart-item v-for="item of cartItems"\n                    :key="item.id_product"\n                    :cart-item="item" @remove="remove">\n                    </cart-item>\n\n                    <div class="basket_box__total_price">\n                        <p class="basket_box__total_price_text">TOTAL</p>\n                        <p class="basket_box__total_price_text">$<span\n                                class="basket_box__total_price_text_span">{{ amount.toFixed(2) }}</span></p>\n                    </div>\n                    <a href="chekout.html" class="basket_box__button">Checkout</a>\n                    <a href="shopping_cart.html" class="basket_box__button">Go to cart</a>\n                </div>            \n        </div>\n    '});Vue.component("cart-item",{props:["cartItem"],template:'   \n    <div class="basket_box__item">\n        <a href="#" class="basket_box__item_link">\n            <img :src=cartItem.img alt="photo" class="basket_box__item_photo">\n            <div class="basket_box__item_info">\n                <p class="basket_box__item_info_name">{{ cartItem.product_name }}</p>\n                <img src="img/basket_stars.png" alt="stars"\n                    class="basket_box__item_info_stars">\n                    <div class="basket_box__item_info_price_flex">\n                    <p class="basket_box__item_info_price"><span\n                class="basket_box__item_span_count">{{ cartItem.quantity }}</span> x $<span\n                class="basket_box__item_span_price">{{ cartItem.price.toFixed(2) }}</span></p> <p class="basket_box__item_info_total_price">$<span\n                class="basket_box__item_span_total_price">{{ (cartItem.quantity*cartItem.price).toFixed(2) }}</span></p>\n                </div>                    \n            </div>\n        </a>\n        <button class="basket_box__item_delete" @click="$emit(\'remove\', cartItem)"><i\n                class="fa-solid fa-circle-xmark"></i></button>\n    </div>\n    '});Vue.component("filter-el",{data:()=>({userSearch:""}),template:'\n            \n            <form action="#" class="header__top_form" @submit.prevent="$parent.$refs.products.filter(userSearch)">\n\n                <div class="header__top_browse_button">\n\n                    <details class="browse_button">\n                        <summary class="browse_button_summary">Browse</summary>\n                        <div class="header_box">\n                            <div class="header_item">\n                                <h3 class="header_item__heading">Women</h3>\n                                <a class="header_item__link" href="#">Dresses</a>\n                                <a class="header_item__link" href="#">Tops</a>\n                                <a class="header_item__link" href="#">Sweaters/Knits</a>\n                                <a class="header_item__link" href="#">Jackets/Coats</a>\n                                <a class="header_item__link" href="#">Blazers</a>\n                                <a class="header_item__link" href="#">Denim</a>\n                                <a class="header_item__link" href="#">Leggings/Pants</a>\n                                <a class="header_item__link" href="#">Skirts/Shorts</a>\n                                <a class="header_item__link" href="#">Accessories</a>\n                            </div>\n                            <div class="header_item">\n                                <h3 class="header_item__heading">Man</h3>\n                                <a class="header_item__link" href="#">Dresses</a>\n                                <a class="header_item__link" href="#">Tops</a>\n                                <a class="header_item__link" href="#">Sweaters/Knits</a>\n                            </div>\n                        </div>\n                    </details>\n\n                </div>\n\n                <input class="input_search" type="search" placeholder="Search for Item..." v-model="userSearch">\n                <button class="button_search" type="submit"><i\n                        class="fa-solid fa-magnifying-glass"></i></button>\n            </form>\n\n            '}),Vue.component("error",{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'\n    <div class="error-block" v-if="isVisible">\n        <p class="error-msg">\n        <button class="close-btn" @click="text=\'\'">&times;</button>\n        {{ text }}\n</p>\n</div>\n    '}),new Vue({el:"#app",data:{userSearch:""},methods:{getJson(t){return fetch(t).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},postJson(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},putJson(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},delJson(t,e){return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))}},mounted(){}});for(let t of document.querySelectorAll('input[type="range"].slider-progress'))t.style.setProperty("--value",t.value),t.style.setProperty("--min",""==t.min?"0":t.min),t.style.setProperty("--max",""==t.max?"100":t.max),t.addEventListener("input",(()=>t.style.setProperty("--value",t.value)))})();